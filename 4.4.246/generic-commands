#!/usr/bin/env bash

PATCHES_FOLDER=$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)
[[ "$(pwd)" =~ flash ]] && FLASH=true

function header() {
    echo -e "\033[01;31m"
    echo -e "====$(for i in $(seq ${#1}); do echo -e "=\c"; done)===="
    echo -e "==  ${1}  =="
    echo -e "====$(for i in $(seq ${#1}); do echo -e "=\c"; done)===="
    echo -e "\033[0m"
}

function die() {
    echo -e "\033[01;31m"
    echo "${@}"
    echo -e "\033[0m"
    exit 1
}

APPROVED_CONFLICTS=( "net/core/netpoll.c:1" )
readarray -t CONFLICTS <<< "$(git cf)"
if [[ -n "${CONFLICTS[*]}" ]]; then
    header "Resetting all conflicts"
    for CONFLICT in "${CONFLICTS[@]}"; do
        FOUND=false
        for APPROVED_CONFLICT in "${APPROVED_CONFLICTS[@]}"; do
            ACTION=$(echo "${APPROVED_CONFLICT}" | cut -d : -f 3)
            NOC=$(echo "${APPROVED_CONFLICT}" | cut -d : -f 2)
            APPROVED_CONFLICT=$(echo "${APPROVED_CONFLICT}" | cut -d : -f 1)
            [[ -z ${ACTION} ]] && ACTION=rf
            [[ ${CONFLICT} = ${APPROVED_CONFLICT} ]] && { FOUND=true; break; }
        done
        [[ ${NOC} -ne $(git lo HEAD..MERGE_HEAD "${CONFLICT}" | wc -l) ]] && die "${CONFLICT} resolution might be outdated!"
        if ${FOUND}; then
            case ${ACTION} in
                "rf") ACTION_STRING="Resetting" ;;
                "rm"*) ACTION_STRING="Removing" ;;
                *) die "Invalid action: ${ACTION}" ;;
            esac

            echo "${ACTION_STRING} ${CONFLICT}..."
            git "${ACTION}" "${CONFLICT}" &>/dev/null
        else
            die "${CONFLICT} not accounted for, bailing out!"
        fi
    done
    [[ -n "$(git cf)" ]] && die "Resetting conflicts failed!"

    header "Applying all patches"
    cat <<'EOF' | git ap || exit ${?}
diff --git a/net/core/netpoll.c b/net/core/netpoll.c
index 48101b0f1aea..8d612cefb5f3 100644
--- a/net/core/netpoll.c
+++ b/net/core/netpoll.c
@@ -28,6 +28,7 @@
 #include <linux/slab.h>
 #include <linux/export.h>
 #include <linux/if_vlan.h>
+#include <net/dsa.h>
 #include <net/tcp.h>
 #include <net/udp.h>
 #include <net/addrconf.h>
@@ -661,15 +662,15 @@ EXPORT_SYMBOL_GPL(__netpoll_setup);
 
 int netpoll_setup(struct netpoll *np)
 {
-	struct net_device *ndev = NULL;
+	struct net_device *ndev = NULL, *dev = NULL;
+	struct net *net = current->nsproxy->net_ns;
 	struct in_device *in_dev;
 	int err;
 
 	rtnl_lock();
-	if (np->dev_name[0]) {
-		struct net *net = current->nsproxy->net_ns;
+	if (np->dev_name[0])
 		ndev = __dev_get_by_name(net, np->dev_name);
-	}
+
 	if (!ndev) {
 		np_err(np, "%s doesn't exist, aborting\n", np->dev_name);
 		err = -ENODEV;
@@ -677,6 +678,19 @@ int netpoll_setup(struct netpoll *np)
 	}
 	dev_hold(ndev);
 
+	/* bring up DSA management network devices up first */
+	for_each_netdev(net, dev) {
+		if (!netdev_uses_dsa(dev))
+			continue;
+
+		err = dev_change_flags(dev, dev->flags | IFF_UP);
+		if (err < 0) {
+			np_err(np, "%s failed to open %s\n",
+			       np->dev_name, dev->name);
+			goto put;
+		}
+	}
+
 	if (netdev_master_upper_dev_get(ndev)) {
 		np_err(np, "%s is a slave device, aborting\n", np->dev_name);
 		err = -EBUSY;
EOF

    header "Committing merge"
    git fm || exit 1
fi
